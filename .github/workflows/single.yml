---
name: Single Feed
run-name: ${{inputs.id}}
on:
  workflow_dispatch:
    inputs:
      id:
        required: true
        description: feed id
        type: string
      url:
        required: true
        description: feed url
        type: string
      proxy:
        required: false
        description: use proxy
        type: boolean
        default: false
      cookie:
        required: false
        description: use cookie
        type: boolean
        default: false

permissions: write-all
concurrency:
  group: ${{inputs.id}}
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: fetch ffmpeg md5
        run: curl -sSLf https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz.md5 -o ffmpeg.md5

      - uses: actions/cache@v4
        id: cache-ffmpeg
        with:
          path: |
            ~/.local/bin/ffmpeg
            ~/.local/bin/ffprobe
          key: ${{ runner.os }}-ffmpeg-${{ hashFiles('ffmpeg.md5') }}

      - name: Install ffmpeg
        if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
        shell: bash
        run: |
          if [ ! -x "$HOME/.local/bin/ffmpeg" ]; then
          mkdir -p ~/.local/bin
          curl -fsSL -o /tmp/ffmpeg.tar.gz "https://johnvansickle.com/ffmpeg/builds/ffmpeg-git-amd64-static.tar.xz"
          tar --extract --strip-components=1 --file /tmp/ffmpeg.tar.gz -C ~/.local/bin/ --wildcards '*/ffmpeg' '*/ffprobe'
          fi

      - uses: actions/cache@v4
        if: inputs.proxy
        id: cache-proxy
        with:
          path: |
            ~/.local/bin/v2ray
            ~/.local/bin/config.json
          key: ${{ runner.os }}-proxy

      - name: Set proxy
        if: inputs.proxy
        shell: bash
        run: |
          if [ ! -x "$HOME/.local/bin/v2ray" ]; then
          mkdir -p ~/.local/bin
          curl -fsSL -o /tmp/v2ray.zip "https://github.com/v2fly/v2ray-core/releases/download/v4.45.2/v2ray-linux-64.zip"
          unzip -d /tmp /tmp/v2ray.zip
          mv /tmp/v2ray ~/.local/bin
          curl -fsSL -o ~/.local/bin/config.json "${{ secrets.PROXY_URL }}"
          fi
          nohup ~/.local/bin/v2ray -c ~/.local/bin/config.json > /dev/null 2>&1 &

      - uses: mamba-org/setup-micromamba@v1
        name: Setup micromamba environment
        with:
          micromamba-version: latest
          environment-file: environment.yml
          environment-name: ci
          cache-environment: true
          cache-downloads: false
          log-level: info

      - name: Download releases
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |-
          gh release download data -D data --clobber --pattern config.json || true
          gh release download data -D data --clobber --pattern ${{inputs.id}}.json || true
          if [ -f "${{inputs.id}}.json" ]; then
          sha1sum data/${{inputs.id}}.json > data/${{inputs.id}}.json.sha1
          fi

      - name: Get Bilibili Cookies
        if: inputs.cookie
        env:
          COOKIE_CLOUD_SERVER: ${{ secrets.COOKIE_CLOUD_SERVER }}
          COOKIE_CLOUD_KEY: ${{ secrets.COOKIE_CLOUD_KEY }}
          COOKIE_CLOUD_PASS: ${{ secrets.COOKIE_CLOUD_PASS }}
        shell: micromamba-shell {0}
        run: |-
          python src/get-cookies.py -d bilibili.com -p ~/.config/videogram/cookies/bilibili.txt --no-subdomain

      - name: Sync with proxy
        if: inputs.proxy
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VIDEOGRAM_TG_SESSION_STRING: ${{ secrets.VIDEOGRAM_TG_SESSION_STRING }}
          VIDEOGRAM_YT_LANG: ${{ secrets.VIDEOGRAM_YT_LANG }}
          VIDEOGRAM_PROXY: socks5://127.0.0.1:7890
          RSSHUB_URL: ${{ secrets.RSSHUB_URL }}
        shell: micromamba-shell {0}
        run: |-
          python src/feedgram.py --name ${{inputs.name}} --config config/bilibili.json

      - name: Sync without proxy
        if: inputs.proxy == 0
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VIDEOGRAM_TG_SESSION_STRING: ${{ secrets.VIDEOGRAM_TG_SESSION_STRING }}
          VIDEOGRAM_YT_LANG: ${{ secrets.VIDEOGRAM_YT_LANG }}
          RSSHUB_URL: ${{ secrets.RSSHUB_URL }}
        shell: micromamba-shell {0}
        run: |-
          python src/feedgram.py --id ${{inputs.id}} --url ${{inputs.url}}

      - name: Upload release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! sha1sum -c data/${{inputs.id}}.json.sha1 &> /dev/null; then
          gh release upload --clobber data data/${{inputs.id}}.json
          fi
